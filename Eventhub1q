import logging
from azure.eventhub import EventHubProducerClient, EventData
from flask import Flask, jsonify
import sys

app = Flask(__name__)

# Configure Logging
logging.basicConfig(level=logging.DEBUG, handlers=[logging.StreamHandler(sys.stdout)])
logger = logging.getLogger(__name__)

# Replace with your Event Hub connection string
CONNECTION_STRING = "Endpoint=sb://<your-namespace>.servicebus.windows.net/;SharedAccessKeyName=<policy>;SharedAccessKey=<key>;EntityPath=<eventhub_name>"
EVENT_HUB_NAME = "<eventhub_name>"

@app.route('/sendEvent', methods=['POST'])
def send_event():
    try:
        logger.info("Initializing EventHubProducerClient...")
        producer = EventHubProducerClient.from_connection_string(CONNECTION_STRING, eventhub_name=EVENT_HUB_NAME)
        
        with producer:
            logger.info("Creating event batch...")
            event_data_batch = producer.create_batch()
            event_data_batch.add(EventData("Test message"))
            logger.info("Sending event batch...")
            producer.send_batch(event_data_batch)

        logger.info("Event sent successfully.")
        return jsonify({"status": "Success"}), 200

    except Exception as e:
        logger.error("Failed to connect to Event Hub", exc_info=True)
        return jsonify({
            "error": "Failed to connect to Event Hub",
            "details": str(e)
        }), 500

if __name__ == '__main__':
    app.run(debug=True)
