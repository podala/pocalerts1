import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectItem } from "@/components/ui/select";
import RulePreview from "./RulePreview";

const RuleBuilder = ({ rules, setRules }) => {
  const [newRule, setNewRule] = useState({ field: "", condition: "", value: "", action: "" });

  const addRule = () => {
    if (newRule.field && newRule.condition && newRule.value && newRule.action) {
      setRules([...rules, newRule]);
      setNewRule({ field: "", condition: "", value: "", action: "" });
    }
  };

  return (
    <div className="p-4 border rounded-lg shadow-sm bg-white">
      <h2 className="text-lg font-semibold mb-3">Rule Builder</h2>

      <div className="grid grid-cols-4 gap-3">
        {/* Select Field */}
        <Select value={newRule.field} onChange={(e) => setNewRule({ ...newRule, field: e.target.value })}>
          <SelectItem value="">Select Field</SelectItem>
          <SelectItem value="A">Column A</SelectItem>
          <SelectItem value="B">Column B</SelectItem>
          <SelectItem value="C">Column C</SelectItem>
        </Select>

        {/* Select Condition */}
        <Select value={newRule.condition} onChange={(e) => setNewRule({ ...newRule, condition: e.target.value })}>
          <SelectItem value="">Condition</SelectItem>
          <SelectItem value=">">Greater than</SelectItem>
          <SelectItem value="<">Less than</SelectItem>
          <SelectItem value="==">Equal to</SelectItem>
        </Select>

        {/* Enter Value */}
        <Input
          type="text"
          placeholder="Value"
          value={newRule.value}
          onChange={(e) => setNewRule({ ...newRule, value: e.target.value })}
        />

        {/* Select Action */}
        <Select value={newRule.action} onChange={(e) => setNewRule({ ...newRule, action: e.target.value })}>
          <SelectItem value="">Action</SelectItem>
          <SelectItem value="Highlight">Highlight</SelectItem>
          <SelectItem value="Change Value">Change Value</SelectItem>
        </Select>
      </div>

      <Button className="mt-3" onClick={addRule}>Add Rule</Button>

      {/* Preview Rules */}
      <RulePreview rules={rules} />
    </div>
  );
};

export default RuleBuilder;
=====≈====

const RulePreview = ({ rules }) => {
  return (
    <div className="mt-4 p-4 border rounded-lg shadow-sm bg-gray-100">
      <h3 className="text-md font-semibold">Preview Rules</h3>
      {rules.length > 0 ? (
        <ul>
          {rules.map((rule, index) => (
            <li key={index} className="text-sm">
              ✅ If **{rule.field}** {rule.condition} {rule.value}, then **{rule.action}**
            </li>
          ))}
        </ul>
      ) : (
        <p className="text-gray-500 text-sm">No rules added yet.</p>
      )}
    </div>
  );
};

export default RulePreview;
=========
export const applyRules = (data, rules) => {
  return data.map((row) => {
    rules.forEach((rule) => {
      if (eval(`${row[rule.field]} ${rule.condition} ${rule.value}`)) {
        if (rule.action === "Highlight") {
          row["highlight"] = true; // Flag for conditional formatting
        } else if (rule.action === "Change Value") {
          row[rule.field] = "Updated"; // Example change
        }
      }
    });
    return row;
  });
};

====
import { useState } from "react";
import RuleBuilder from "./components/RuleBuilder";

function App() {
  const [rules, setRules] = useState([]);

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold">Rule Builder Demo</h1>
      <RuleBuilder rules={rules} setRules={setRules} />
    </div>
  );
}

export default App;

