import pandas as pd
import json

def extract_header_data(file_path):
    """
    Extract header data from the Excel file into a structured JSON format with debugging.

    Parameters:
        file_path (str): Path to the Excel file.

    Returns:
        dict: JSON-like structure containing header and field data.
    """
    # Step 1: Load the Excel file
    print("Loading the Excel file...")
    excel_data = pd.read_excel(file_path, sheet_name=0, header=None)
    print("Excel file loaded successfully!\nFirst few rows:")
    print(excel_data.head())  # Print the first few rows to debug the structure

    # Step 2: Normalize the data
    print("\nNormalizing the data...")
    excel_data = excel_data.fillna("").applymap(lambda x: str(x).strip().lower() if isinstance(x, str) else x)
    excel_data = excel_data.fillna(method='ffill', axis=0)  # Forward fill to handle merged cells
    print("Normalized data:\n", excel_data.head())

    # Step 3: Define headers to locate
    headers = ["pl information", "rpt information"]
    extracted_data = {}

    # Step 4: Iterate through each header and extract its data
    for header in headers:
        try:
            print(f"\nSearching for header: '{header}'...")
            # Find the starting row index for the header
            header_row_idx = excel_data[excel_data.iloc[:, 0].str.contains(header, na=False)].index[0]
            print(f"Header '{header}' found at row index: {header_row_idx}")
            
            header_data = []

            # Collect rows under the header until another header or empty row
            for i in range(header_row_idx + 1, len(excel_data)):
                row = excel_data.iloc[i]
                if row[0] == "" or any(h in row[0] for h in headers):
                    print(f"Stopping extraction at row index: {i}")
                    break

                # Append field-value pairs to the header_data list
                header_data.append({
                    "Field": row[0],
                    "Value": row[1] if len(row) > 1 else None
                })

            # Add to the final dictionary
            extracted_data[header] = {"header_data": header_data}

        except IndexError:
            print(f"Header '{header}' not found in the file.")
            continue

    return extracted_data


# Step 5: Run the extraction and save the output
file_path = "Pnl.xlsx"  # Replace with the correct file path
result = extract_header_data(file_path)

# Step 6: Save to JSON
output_file = "formatted_data.json"
with open(output_file, "w") as f:
    json.dump(result, f, indent=4)

print(f"\nData extraction complete. JSON saved to {output_file}.")
