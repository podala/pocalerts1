Option Explicit

' === CONFIGURE YOUR FILE AND SHEET NAME HERE ===
Dim filePath, sheetName
filePath = "C:\Path\To\File.xlsb"  ' <-- Change this path to your actual file
sheetName = "Input"

WScript.Echo "Starting script..."
WScript.Echo "Target file: " & filePath
WScript.Echo "Target sheet: " & sheetName

Dim fso, excelApp, workbook, sheet, cell
Dim output, row, col, cellCount
Dim jsonOutputPath, jsonText, cellInfo, formula
Dim re, matches, match, headerText

Set fso = CreateObject("Scripting.FileSystemObject")
If Not fso.FileExists(filePath) Then
    WScript.Echo "❌ File not found: " & filePath
    WScript.Quit 1
End If

jsonOutputPath = fso.GetParentFolderName(filePath) & "\output.json"
WScript.Echo "Output JSON path: " & jsonOutputPath

' === Setup Excel ===
Set excelApp = CreateObject("Excel.Application")
excelApp.Visible = False
excelApp.DisplayAlerts = False

WScript.Echo "Opening workbook..."
Set workbook = excelApp.Workbooks.Open(filePath, 0, True)

WScript.Echo "Locating sheet..."
On Error Resume Next
Set sheet = workbook.Sheets(sheetName)
On Error GoTo 0

If sheet Is Nothing Then
    WScript.Echo "❌ Sheet not found: " & sheetName
    workbook.Close False
    excelApp.Quit
    WScript.Quit 1
End If

WScript.Echo "✅ Sheet found: " & sheetName

' === Prepare RegExp for sheet!cell references ===
Set re = New RegExp
re.Pattern = "([A-Za-z0-9_]+)!\$?([A-Z]+)\$?([0-9]+)"
re.Global = True

jsonText = "["
cellCount = 0

WScript.Echo "Scanning 500 rows × 25 columns..."
For row = 1 To 500
    For col = 1 To 25
        Set cell = sheet.Cells(row, col)
        If Not IsEmpty(cell.Value) Or cell.HasFormula Then
            headerText = sheet.Cells(1, col).Text

            cellInfo = "  {""sheet"": """ & sheetName & """, " & _
                        """cell"": """ & cell.Address(False, False) & """, " & _
                        """columnHeader"": """ & EscapeJson(headerText) & """, " & _
                        """value"": """ & EscapeJson(cell.Text) & """, "

            If cell.HasFormula Then
                formula = cell.Formula
                cellInfo = cellInfo & """formula"": """ & EscapeJson(formula) & """, "

                Set matches = re.Execute(formula)
                If matches.Count > 0 Then
                    cellInfo = cellInfo & """formulaReferences"": ["
                    For Each match In matches
                        cellInfo = cellInfo & "{""refSheet"": """ & match.SubMatches(0) & """, " & _
                                               """refCell"": """ & match.SubMatches(1) & match.SubMatches(2) & """},"
                    Next
                    cellInfo = Left(cellInfo, Len(cellInfo) - 1) & "], "
                Else
                    cellInfo = cellInfo & """formulaReferences"": [], "
                End If
            Else
                cellInfo = cellInfo & """formula"": null, ""formulaReferences"": [], "
            End If

            cellInfo = Left(cellInfo, Len(cellInfo) - 2) & "}"
            jsonText = jsonText & vbCrLf & cellInfo & ","
            cellCount = cellCount + 1

            If cellCount Mod 100 = 0 Then
                WScript.Echo "Captured " & cellCount & " cells so far..."
            End If
        End If
    Next
Next

If cellCount > 0 Then
    jsonText = Left(jsonText, Len(jsonText) - 1) ' Remove trailing comma
End If
jsonText = jsonText & vbCrLf & "]"

WScript.Echo "Writing to JSON file..."
Dim jsonFile
Set jsonFile = fso.CreateTextFile(jsonOutputPath, True, True)
jsonFile.Write jsonText
jsonFile.Close

workbook.Close False
excelApp.Quit

WScript.Echo "✅ Done. Extracted " & cellCount & " cells to: " & jsonOutputPath

' === Escape text for JSON compatibility ===
Function EscapeJson(str)
    str = Replace(str, "\", "\\")
    str = Replace(str, """", "\""")
    str = Replace(str, vbCrLf, "\n")
    str = Replace(str, vbLf, "\n")
    str = Replace(str, vbCr, "\n")
    EscapeJson = str
End Function
