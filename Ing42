import pandas as pd
import json
import logging

# Configure Logging
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

class PLInformationProcessor:
    def __init__(self, config):
        self.config = config
        logging.info("Initialized PLInformationProcessor")

    def process_vector(self, df, vector_index):
        """Processes a single vector into the required JSON format."""
        logging.info(f"Processing vector {vector_index}")

        document = {
            "PL_group": "PL_Information",
            "vector": vector_index,
            "modelYears": []
        }

        for _, row in df.iterrows():
            if row["header"] == "PL Information":
                kpi_name = row["kpi"]
                value = row[f"vector {vector_index}"]  # Get the value for the specific vector

                if "Model Year" in kpi_name and str(value).isdigit():
                    document["modelYears"].append({"year": int(value)})
                else:
                    document[kpi_name] = value

        return document


def process_pl_information(csv_file, config):
    logging.info("Starting PL Information CSV Processing")
    df = pd.read_csv(csv_file)
    processor = PLInformationProcessor(config)

    for vector_index in range(1, 6):  # Assuming 5 vectors
        processed_data = processor.process_vector(df, vector_index)

        with open(f"pl_information_vector_{vector_index}.json", "w") as f:
            json.dump([processed_data], f, indent=4)  # Save as a list
        logging.info(f"Saved pl_information_vector_{vector_index}.json successfully")


if __name__ == "__main__":
    csv_file = "input_data.csv"
    config = {
        "header_groups": {
            "PL_Information": {
                "headers": ["PL Information", "Rpt Information"]
            }
        }
    }
    logging.info("Starting PLInformationProcessor Execution")
    process_pl_information(csv_file, config)
