# Yearly Data type definition
type YearlyData {
  year: Int!          # Year of the data (e.g., 2021, 2022)
  value: Float!       # Value associated with the year (e.g., 1500.75)
}

# SubCategory type definition within a Category
type SubCategory {
  subCategoryName: String!   # Name of the subcategory (e.g., "Brand", "Generic")
  yearlyData: [YearlyData!]  # List of yearly data entries for this subcategory
}

# Category type definition within a Header
type Category {
  categoryName: String!        # Name of the category (e.g., "Mail", "Retail 30")
  subCategories: [SubCategory!] # List of subcategories within this category
}

# Header type definition representing the main document
type Header {
  id: ID!                     # Unique identifier for the document
  PLID: String!               # Profit and Loss ID
  OpportunityID: String!      # Opportunity ID
  CaseID: String!             # Case ID
  headerName: String!         # Header name (e.g., "Scripts Revenue")
  categories: [Category!]     # List of categories under this header
  Metadata: Metadata!         # Metadata information for the document
}

# Metadata type definition
type Metadata {
  CreatedBy: String!          # Username or ID of the document creator
  CreatedAt: String!          # Timestamp when the document was created
  UpdatedBy: String!          # Username or ID of the last person to update the document
  UpdatedAt: String!          # Timestamp when the document was last updated
}

# Input type for adding or updating yearly data
input YearlyDataInput {
  year: Int!
  value: Float!
}

# Input type for adding or updating a subcategory
input SubCategoryInput {
  subCategoryName: String!
  yearlyData: [YearlyDataInput!]!
}

# Input type for adding or updating a category
input CategoryInput {
  categoryName: String!
  subCategories: [SubCategoryInput!]!
}

# Input type for adding or updating a header
input HeaderInput {
  PLID: String!
  OpportunityID: String!
  CaseID: String!
  headerName: String!
  categories: [CategoryInput!]!
}

# Input type definition for filtering headers with specific categories and subcategories
input HeaderCategoryFilterInput {
  categoryName: String!            # Name of the category to filter
  subCategories: [String!]         # List of subcategory names to include under this category
}

# Root Query Type for fetching data with multi-level filtering
type Query {
  # Query to get headers based on PLID, OpportunityID, headerName, and filtered categories/subcategories
  getFilteredHeaders(
    PLID: String!,                        # Required filter for PLID
    OpportunityID: String!,               # Required filter for Opportunity ID
    headerNames: [String],                # Optional list of header names to filter
    categoriesFilter: [HeaderCategoryFilterInput!] # Optional list of category and subcategory filters
  ): [Header]
}

# Root Mutation Type for creating and updating data
type Mutation {
  createHeader(input: HeaderInput!): Header
  updateHeader(id: ID!, input: HeaderInput!): Header
}

# The main schema definition
schema {
  query: Query
  mutation: Mutation
}
