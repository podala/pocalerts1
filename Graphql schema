# Type definition for yearly data
type YearlyData {
  year: Int!            # Year of the data
  value: Float!         # Value associated with the year
}

# Type definition for a subcategory within a category
type SubCategory {
  subCategoryName: String!     # Name of the subcategory (e.g., "Brand", "Generic")
  yearlyData: [YearlyData!]    # List of yearly data entries for this subcategory
}

# Type definition for a category within a header
type Category {
  categoryName: String!        # Name of the category (e.g., "Mail", "Retail 30")
  subCategories: [SubCategory!] # List of subcategories within this category
}

# Type definition for the main header document
type Header {
  id: ID!                      # Unique identifier for the document
  PLID: String!                # Profit and Loss ID
  OpportunityID: String!       # Opportunity ID
  CaseID: String!              # Case ID
  headerName: String!          # Header name (e.g., "Scripts Revenue")
  categories: [Category!]      # List of categories under this header
  Metadata: Metadata!          # Metadata information
}

# Type definition for metadata
type Metadata {
  CreatedBy: String!           # Username or ID of the document creator
  CreatedAt: String!           # Timestamp when the document was created
  UpdatedBy: String!           # Username or ID of the last person to update the document
  UpdatedAt: String!           # Timestamp when the document was last updated
}

# Input type definition for adding yearly data
input YearlyDataInput {
  year: Int!
  value: Float!
}

# Input type definition for adding a subcategory
input SubCategoryInput {
  subCategoryName: String!
  yearlyData: [YearlyDataInput!]!
}

# Input type definition for adding a category
input CategoryInput {
  categoryName: String!
  subCategories: [SubCategoryInput!]!
}

# Input type definition for creating or updating a header
input HeaderInput {
  PLID: String!
  OpportunityID: String!
  CaseID: String!
  headerName: String!
  categories: [CategoryInput!]!
}

# Root Query Type for fetching data
type Query {
  getHeaderByPLID(PLID: String!): Header
  getHeadersByOpportunityID(OpportunityID: String!): [Header]
  getHeadersByCaseID(CaseID: String!): [Header]
}

# Root Mutation Type for modifying data
type Mutation {
  createHeader(input: HeaderInput!): Header
  updateHeader(id: ID!, input: HeaderInput!): Header
  addCategoryToHeader(id: ID!, categoryInput: CategoryInput!): Header
  addSubCategoryToCategory(id: ID!, categoryName: String!, subCategoryInput: SubCategoryInput!): Header
}

# The main schema definition
schema {
  query: Query
  mutation: Mutation
}
